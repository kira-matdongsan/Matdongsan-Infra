name: Run Flyway Migration on EC2

on:
  workflow_dispatch:

jobs:
  flyway:
    runs-on: ubuntu-latest

    steps:
      - name: Capture Start Time
        id: start
        run: |
          echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT
          echo "start_iso=$(date --iso-8601=seconds)" >> $GITHUB_OUTPUT

      - name: Notify Discord - START 🚀
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_FLYWAY }}
          username: "Matdongsan Flyway Migration"
          avatar-url: "https://i.pinimg.com/736x/4b/91/be/4b91be09ffae6c280911127f99a4d8ce.jpg"
          embed-title: "🚀 Flyway 마이그레이션 시작"
          embed-url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: |
            - 🌿 브랜치: `${{ github.ref_name }}`
            - 👤 실행자: `${{ github.actor }}`
            - 🛠️ 실행 방식: `수동 실행`
          embed-color: 3447003
          embed-timestamp: ${{ steps.start.outputs.start_iso }}

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.AWS_EC2_SSH_KEY }}" > key.pem
          chmod 400 key.pem

      - name: SSH into EC2 and run Flyway migration
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            
            source ~/.env

            docker pull "${DOCKERHUB_USERNAME}/matdongsan-flyway"
            docker run --rm \
              --env-file ~/.env \
              "${DOCKERHUB_USERNAME}/matdongsan-flyway" migrate
          EOF
          
          rm -f key.pem

        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Capture End Time and Duration
        id: end
        run: |
          end_time=$(date +%s)
          start_time=${{ steps.start.outputs.start_time }}
          duration=$(( end_time - start_time ))
          echo "duration=${duration}" >> $GITHUB_OUTPUT
          echo "end_iso=$(date --iso-8601=seconds)" >> $GITHUB_OUTPUT

      - name: Notify Discord - SUCCESS ✅
        if: success()
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_FLYWAY }}
          username: "Matdongsan Flyway Migration"
          avatar-url: "https://i.pinimg.com/736x/4b/91/be/4b91be09ffae6c280911127f99a4d8ce.jpg"
          embed-title: "✅ Flyway 마이그레이션 성공"
          embed-url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: |
            마이그레이션이 완료되었습니다.
            ⏱️ 소요 시간: `${{ steps.end.outputs.duration }}초`
          embed-color: 5763719
          embed-timestamp: ${{ steps.end.outputs.end_iso }}

      - name: Notify Discord - FAIL ❌
        if: failure()
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_FLYWAY }}
          username: "Matdongsan Flyway Migration"
          avatar-url: "https://i.pinimg.com/736x/4b/91/be/4b91be09ffae6c280911127f99a4d8ce.jpg"
          embed-title: "❌ Flyway 마이그레이션 실패"
          embed-url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: |
            오류가 발생하여 마이그레이션이 중단되었습니다.
            ⏱️ 소요 시간: `${{ steps.end.outputs.duration }}초`
          embed-color: 15548997
          embed-timestamp: ${{ steps.end.outputs.end_iso }}